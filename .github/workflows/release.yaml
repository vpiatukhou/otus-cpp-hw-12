name: 'release'
on:
  push:
    branches:
      - master

jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-20.04
    steps:
      - name: install boost
        working-directory: /usr/local/
        run: |
          wget https://boostorg.jfrog.io/artifactory/main/release/1.81.0/source/boost_1_81_0.tar.bz2 && \
          tar --bzip2 -xf boost_1_81_0.tar.bz2 && \
          rm boost_1_81_0.tar.bz2
      - uses: actions/checkout@v2
        with:
          submodules: true
      - run: ls /home/runner/work/otus-cpp-hw-12/otus-cpp-hw-12/boost
      - name: build and test
        run: |
          cmake . -DPATCH_VERSION=${{ github.run_number }} -DWITH_TESTS=TRUE -DBoost_INCLUDE_DIR=/home/runner/work/otus-cpp-hw-12/otus-cpp-hw-12/boost && \
          cmake --build . && \
          ctest
      - name: build for release
        run: |
          cmake . -DPATCH_VERSION=${{ github.run_number }} -DWITH_TESTS=FALSE -DBoost_INCLUDE_DIR=/home/runner/work/otus-cpp-hw-12/otus-cpp-hw-12/boost && \
          cmake --build . --target package
      - name: create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./mapreduce-0.0.${{ github.run_number }}-Linux.deb
          asset_name: mapreduce-0.0.${{ github.run_number }}-Linux.deb
          asset_content_type: application/vnd.debian.binary-package
